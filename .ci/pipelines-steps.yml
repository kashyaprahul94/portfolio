pipelines:
  - name: portfolio_root
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: "kashyaprahul94-docker.jfrog.io/portfolio-ci"
            tag: "feature-jfrog-pipelines-001"
            registry: "kashyaprahul94_docker"
            sourceRepository: "docker"
      environmentVariables:
        readOnly:
          NPM_USER_NAME: "service_user"
          NPM_USER_EMAIL: "kashyaprahul94@gmail.com"

    steps:
      - name: root_init
        type: Bash
        configuration:
          integrations:
            - name: kashyaprahul94_npm
          inputResources:
            - name: repoRoot
        execution:
          onStart:
            - pushd $res_repoRoot_resourcePath
            - ./pipelines/init-npmrc.sh $int_kashyaprahul94_npm_RT_NPM_REGISTRY $int_kashyaprahul94_npm_RT_NPM_TOKEN $NPM_USER_NAME $NPM_USER_EMAIL .
            - add_run_files ./.npmrc state_npmrc

      - name: root_build
        type: Bash
        configuration:
          inputResources:
            - name: repoRoot
          inputSteps:
            - name: root_init
        execution:
          onStart:
            - pushd $res_repoRoot_resourcePath
            - restore_run_files state_npmrc ./.npmrc
            - ls -al
            - cp -r ./.npmrc ./packages/style ./packages/storybook ./packages/app
            - cp -r ./.npmrc ./packages/style
            - ls -al ./packages/style
          onExecute:
            # - yarn --update-checksums
            # - yarn compile
            - echo "will try to release npm versions here"