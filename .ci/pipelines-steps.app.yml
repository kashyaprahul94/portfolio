pipelines:
  - name: portfolio_app
    configuration:
      environmentVariables:
        readOnly:
          GIT_BRANCH: "{{gitBranch}}"
          DOCKER_REGISTRY: "kashyaprahul94-docker.jfrog.io"
          DOCKER_IMAGE_NAME_: "portfolio-app"
          DOCKER_FULL_IMAGE_NAME: "$DOCKER_REGISTRY/$DOCKER_IMAGE_NAME_"
          PACKAGE_NAME: "app"

    steps:
      - name: app_init
        type: Bash
        configuration:
          integrations:
            - name: kashyaprahul94_npm
          inputResources:
            - name: repoApp
        execution:
          onStart:
            - printenv
            - pushd $res_repoApp_resourcePath
            - add_run_variables RELEASE_TAG=$( ./pipelines/normalize-version.sh $GIT_BRANCH )
            - echo "Release tag will be --> $RELEASE_TAG"
            - ./pipelines/init-npmrc.sh $int_kashyaprahul94_npm_RT_NPM_REGISTRY $int_kashyaprahul94_npm_RT_NPM_AUTH $int_kashyaprahul94_npm_RT_NPM_AUTH_EMAIL .
            - add_run_files .npmrc state_npmrc
            - popd

      - name: app_docker_build
        type: DockerBuild
        configuration:
          integrations:
            - name: kashyaprahul94_artifactory
          inputResources:
            - name: repoApp
            - name: imageCI
          inputSteps:
            - name: app_init
          affinityGroup: group_docker_build_push

          dockerFileLocation: packages/app
          dockerFileName: Dockerfile
          dockerImageName: ${DOCKER_FULL_IMAGE_NAME}
          dockerImageTag: ${RELEASE_TAG}
        execution:
          onStart:
            - echo "Image ---> $DOCKER_FULL_IMAGE_NAME:$RELEASE_TAG"
            - pushd $res_repoApp_resourcePath/packages/$PACKAGE_NAME
            - restore_run_files state_npmrc .npmrc
            - ls -al
            - cat .npmrc
          onSuccess:
            - echo "Docker image is successfully built."

      - name: app_docker_push_to_jfrog
        type: DockerPush
        configuration:
          integrations:
            - name: kashyaprahul94_artifactory
          inputSteps:
            - name: app_docker_build
          outputResources:
            - name: imageApp
          affinityGroup: group_docker_build_push

          targetRepository: docker
        execution:
          onStart:
            - docker images
            - echo "Image ---> $DOCKER_FULL_IMAGE_NAME:$RELEASE_TAG"
          onSuccess:
            - write_output imageApp "imageTag=${RELEASE_TAG}"
            - echo "Docker image is successfully pushed to JFrog Docker Registry."